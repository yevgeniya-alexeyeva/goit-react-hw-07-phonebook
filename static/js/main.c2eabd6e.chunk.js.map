{"version":3,"sources":["components/Contact/Contact.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/Form/Form.module.css","redux/actions.js","redux/reducers.js","redux/store.js","API/contacts-api.js","redux/contacts-selectors.js","components/Form/Form.jsx","redux/operations.js","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","index.js"],"names":["module","exports","actions","changeFilter","createAction","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","removeContactRequest","removeContactSuccess","removeContactError","contacts","createReducer","_","payload","state","filter","id","loading","error","items","combineReducers","contactsReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","devTools","process","axios","defaults","baseURL","addContact","contact","post","then","data","console","log","deleteContact","contactId","delete","getAllContacts","getIsLoading","getFilteredContacts","createSelector","normalizedFilter","toLowerCase","trim","isNaN","item","name","includes","number","Form","getContactData","e","setState","target","value","saveNewContact","props","preventDefault","some","alert","currentTarget","reset","className","form","onSubmit","label","input","onInput","this","type","pattern","title","required","button","Component","connect","dispatch","a","shortid","generate","api","onDelete","removeContact","contactItem","onClick","contactList","itemList","map","filterWrapper","filterLabel","htmlFor","App","getContacts","isLoading","color","height","width","timeout","get","response","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c2eabd6e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Contact_button__15Dhf\",\"contactItem\":\"Contact_contactItem__JrGcI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterWrapper\":\"Filter_filterWrapper__PSD4H\",\"filterLabel\":\"Filter_filterLabel__3jHra\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemList\":\"ContactList_itemList__21q8h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__1Cem2\",\"label\":\"Form_label__1Cvku\",\"input\":\"Form_input__240Af\",\"button\":\"Form_button__2-TNd\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst changeFilter = createAction(\"changeFilter\");\r\n\r\nconst fetchContactsRequest = createAction(\"fetchContactsRequest\");\r\nconst fetchContactsSuccess = createAction(\"fetchContactsSuccess\");\r\nconst fetchContactsError = createAction(\"fetchContactsError\");\r\n\r\nconst addContactRequest = createAction(\"addContactRequest\");\r\nconst addContactSuccess = createAction(\"addContactSuccess\");\r\nconst addContactError = createAction(\"addContactError\");\r\n\r\nconst removeContactRequest = createAction(\"removeContactRequest\");\r\nconst removeContactSuccess = createAction(\"removeContactSuccess\");\r\nconst removeContactError = createAction(\"removeContactError\");\r\n\r\nexport const actions = {\r\n  changeFilter,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  removeContactRequest,\r\n  removeContactSuccess,\r\n  removeContactError,\r\n};\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { combineReducers } from \"redux\";\r\nimport { actions } from \"./actions\";\r\n\r\nconst contacts = createReducer([], {\r\n  [actions.fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [actions.addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [actions.removeContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [actions.fetchContactsRequest]: () => true,\r\n  [actions.fetchContactsSuccess]: () => false,\r\n  [actions.fetchContactsError]: () => false,\r\n  [actions.addContactRequest]: () => true,\r\n  [actions.addContactSuccess]: () => false,\r\n  [actions.addContactError]: () => false,\r\n  [actions.removeContactRequest]: () => true,\r\n  [actions.removeContactSuccess]: () => false,\r\n  [actions.removeContactError]: () => false,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [actions.fetchContactsError]: (_, { payload }) => payload,\r\n  [actions.fetchContactsRequest]: () => null,\r\n  [actions.addContactError]: (_, { payload }) => payload,\r\n  [actions.addContactRequest]: () => null,\r\n  [actions.removeContactError]: (_, { payload }) => payload,\r\n  [actions.removeContactRequest]: () => null,\r\n});\r\n\r\nconst items = combineReducers({\r\n  contacts,\r\n  loading,\r\n  error,\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst contactsReducer = combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n\r\nexport default contactsReducer;\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport logger from \"redux-logger\";\r\nimport {\r\n  // persistStore,\r\n  // persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\n// import storage from \"redux-persist/lib/storage\";\r\nimport contactsReducer from \"./reducers\";\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\n// const contactsPersistConfig = {\r\n//   key: \"contacts\",\r\n//   storage,\r\n//   blacklist: [\"filter\"],\r\n// };\r\n\r\nconst store = configureStore({\r\n  // reducer: persistReducer(contactsPersistConfig, contactsReducer),\r\n  reducer: contactsReducer,\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\n// export const persistor = persistStore(store);\r\n\r\nexport default store;\r\n","import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"http://localhost:4040\";\r\n\r\nexport const fetchContacts = () => {\r\n  return axios.get(\"/contacts\").then((response) => response.data);\r\n};\r\n\r\nexport const addContact = (contact) => {\r\n  return axios.post(\"contacts\", contact).then(({ data }) => {\r\n    console.log(data);\r\n    return data;\r\n  });\r\n};\r\n\r\nexport const deleteContact = (contactId) => {\r\n  return axios.delete(`contacts/${contactId}`);\r\n};\r\n","import { createSelector } from \"reselect\";\r\n\r\nexport const getAllContacts = (state) => state.items.contacts;\r\n\r\nexport const getFilter = (state) => state.filter;\r\n\r\nexport const getIsLoading = (state) => state.items.loading;\r\n\r\nexport const getFilteredContacts = createSelector(\r\n  [getAllContacts, getFilter],\r\n  (items, filter) => {\r\n    if (!filter) return items;\r\n    const normalizedFilter = filter.toLowerCase().trim();\r\n    return isNaN(normalizedFilter)\r\n      ? items.filter((item) =>\r\n          item.name.toLowerCase().includes(normalizedFilter)\r\n        )\r\n      : items.filter((item) => item.number.includes(normalizedFilter));\r\n  }\r\n);\r\n","import PropTypes from \"prop-types\";\r\nimport { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addContact } from \"../../redux/operations\";\r\nimport { form, label, input, button } from \"./Form.module.css\";\r\nimport { getAllContacts } from \"../../redux/contacts-selectors\";\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n  getContactData = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  saveNewContact = (e, name, number) => {\r\n    const { contacts, addContact } = this.props;\r\n\r\n    e.preventDefault();\r\n    contacts.some((item) => item.name === name)\r\n      ? alert(`${name} is already in contacts`)\r\n      : addContact(name, number);\r\n\r\n    e.currentTarget.reset();\r\n  };\r\n\r\n  static propTypes = {\r\n    addContact: PropTypes.func.isRequired,\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form\r\n        className={form}\r\n        onSubmit={(e) =>\r\n          this.saveNewContact(e, this.state.name, this.state.number)\r\n        }\r\n      >\r\n        <label className={label}>\r\n          Name\r\n          <input\r\n            className={input}\r\n            onInput={this.getContactData}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label className={label}>\r\n          Number\r\n          <input\r\n            className={input}\r\n            onInput={this.getContactData}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять из цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <button className={button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: getAllContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addContact: (name, number) => dispatch(addContact(name, number)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\r\n","import { actions } from \"./actions\";\r\nimport * as api from \"../API/contacts-api\";\r\nimport shortid from \"shortid\";\r\n\r\nexport const getContacts = () => async (dispatch) => {\r\n  dispatch(actions.fetchContactsRequest());\r\n\r\n  try {\r\n    const contacts = await api.fetchContacts();\r\n    dispatch(actions.fetchContactsSuccess(contacts));\r\n  } catch (error) {\r\n    dispatch(actions.fetchContactsError(error));\r\n  }\r\n};\r\n\r\nexport const addContact = (name, number) => async (dispatch) => {\r\n  const contact = {\r\n    id: shortid.generate(),\r\n    name: name,\r\n    number: number,\r\n  };\r\n  dispatch(actions.addContactRequest());\r\n\r\n  try {\r\n    const contacts = await api.addContact(contact);\r\n    dispatch(actions.addContactSuccess(contacts));\r\n  } catch (error) {\r\n    dispatch(actions.addContactError(error));\r\n  }\r\n};\r\n\r\nexport const removeContact = (contactId) => async (dispatch) => {\r\n  dispatch(actions.removeContactRequest());\r\n\r\n  try {\r\n    await api.deleteContact(contactId);\r\n    dispatch(actions.removeContactSuccess(contactId));\r\n  } catch (error) {\r\n    dispatch(actions.removeContactError(error));\r\n  }\r\n};\r\n","import { connect } from \"react-redux\";\r\nimport { removeContact } from \"../../redux/operations\";\r\nimport PropTypes from \"prop-types\";\r\nimport { button, contactItem } from \"./Contact.module.css\";\r\n\r\nconst Contact = (props) => {\r\n  const { item, onDelete } = props;\r\n  return (\r\n    <li className={contactItem}>\r\n      <span>\r\n        {item.name}: {item.number}\r\n      </span>\r\n      <button\r\n        className={button}\r\n        type=\"button\"\r\n        onClick={() => onDelete(item.id)}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContact.propTypes = {\r\n  item: PropTypes.object.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onDelete: (contactId) => dispatch(removeContact(contactId)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Contact);\r\n","import { connect } from \"react-redux\";\r\nimport Contact from \"../Contact\";\r\nimport PropTypes from \"prop-types\";\r\nimport { itemList } from \"./ContactList.module.css\";\r\nimport { getFilteredContacts } from \"../../redux/contacts-selectors\";\r\n\r\nconst ContactList = (props) => {\r\n  const { contactList, onDelete } = props;\r\n  return (\r\n    <ul className={itemList}>\r\n      {contactList.map((item) => {\r\n        return <Contact item={item} key={item.id} onDelete={onDelete} />;\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contactList: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    contactList: getFilteredContacts(state),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ContactList);\r\n","import { connect } from \"react-redux\";\r\nimport { actions } from \"../../redux/actions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { filterWrapper, filterLabel } from \"./Filter.module.css\";\r\n\r\nconst Filter = (props) => {\r\n  const { value, changeFilter } = props;\r\n  return (\r\n    <div className={filterWrapper}>\r\n      <label className={filterLabel} htmlFor=\"filter\">\r\n        Find contacts by name or number\r\n      </label>\r\n      <input\r\n        id=\"filter\"\r\n        onInput={(e) => changeFilter(e.target.value)}\r\n        value={value}\r\n        type=\"text\"\r\n      ></input>\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  changeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = ({ filter }) => ({ value: filter });\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  changeFilter: (value) => dispatch(actions.changeFilter(value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import \"./App.css\";\nimport { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getContacts } from \"./redux/operations\";\nimport Form from \"./components/Form\";\nimport ContactList from \"./components/ContactList\";\nimport Filter from \"./components/Filter\";\nimport Loader from \"react-loader-spinner\";\nimport { getIsLoading } from \"./redux/contacts-selectors\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.getContacts();\n  }\n\n  render() {\n    const { isLoading } = this.props;\n    return (\n      <div className=\"App\">\n        <h1>Phonebook</h1>\n        <Form />\n        <h2>Contacts</h2>\n        <Filter />\n        {isLoading ? (\n          <Loader\n            type=\"ThreeDots\"\n            color=\"#fc4445\"\n            height={100}\n            width={100}\n            timeout={3000}\n          />\n        ) : (\n          <ContactList />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  isLoading: getIsLoading(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getContacts: () => dispatch(getContacts()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from //, { persistor }\n\"./redux/store\";\n// import { PersistGate } from \"redux-persist/integration/react\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}